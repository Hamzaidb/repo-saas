generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categories {
  id          BigInt     @id @default(autoincrement())
  name        String
  description String?
  products    products[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model order_items {
  id         BigInt    @id @default(autoincrement())
  order_id   BigInt?
  product_id BigInt?
  quantity   Int
  unit_price Decimal   @db.Decimal(10, 2)
  orders     orders?   @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products   products? @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([order_id], map: "idx_order_items_order_id")
  @@index([product_id], map: "idx_order_items_product_id")
}

model orders {
  id                         BigInt        @id @default(autoincrement())
  user_id                    String?       @db.Uuid
  status                     String        @default("pending")
  total                      Decimal       @default(0) @db.Decimal(10, 2)
  stripe_payment_intent_id   String?       @unique
  stripe_checkout_session_id String?       @unique
  created_at                 DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?     @default(now()) @db.Timestamptz(6)
  order_items                order_items[]
  users                      users?        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  payments                   payments[]

  @@index([user_id], map: "idx_orders_user_id")
}

model payments {
  id                BigInt    @id @default(autoincrement())
  order_id          BigInt?
  amount            Decimal   @db.Decimal(10, 2)
  currency          String    @default("eur")
  payment_method    String?
  stripe_payment_id String?   @unique
  status            String    @default("pending")
  paid_at           DateTime? @db.Timestamptz(6)
  orders            orders?   @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([order_id], map: "idx_payments_order_id")
}

model products {
  id          BigInt        @id @default(autoincrement())
  name        String
  description String?
  price       Decimal       @db.Decimal(10, 2)
  stock       Int           @default(0)
  category_id BigInt?
  created_at  DateTime?     @default(now()) @db.Timestamptz(6)
  order_items order_items[]
  categories  categories?   @relation(fields: [category_id], references: [id], onUpdate: NoAction)

  @@index([category_id], map: "idx_products_category_id")
}

model users {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email              String    @unique
  password           String
  name               String
  stripe_customer_id String?   @unique
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  orders             orders[]
}
